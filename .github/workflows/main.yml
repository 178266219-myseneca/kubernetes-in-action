name: Deploy to ECR

on: 
  push:
    branches: [ master ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ASIAXDER47224ZHE6LXB
        AWS_SECRET_ACCESS_KEY: JLvpQFoXzxoNj5013qKhejy8UxQe0U1mBbcD8Uo9
        AWS_SESSION_TOKEN: FwoGZXIvYXdzEAoaDFzey2MWnVMNuilIZCLJARQ7Ks/ilmlZOS5SOA6zVwnkgQwtaP/TrMN7Yow0eiN3zUPEPAWcbaDtunWipPTaNYbSxkq6iG2wim07EitEkHvRRZl1hsI4UijenThV4Is4+spWa//MdXQH37cEzri1RPQogKqPpQ0LrvBbutO6es9+Qrp+UBw8FvtsqqAmnuE35mMB4xzu/PIajRKkJW21ToqVjeU8A90KKf7LY1+2BXi4VPpqozkTBoYJNRaAXt+eFfOSNbKa9ZM0OjQ3TToRbkut8mrR7Af6JCiQntGtBjItOqnipve0gw56CTLHcledUbI0QZGvZulbjeXmUWk5Kyc6N+1nxpf3powsmF3+ 
        AWS_REGION: us-east-1

    - name: Build, test, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835-week4
        IMAGE_TAG: v0.1
      run: |
        cd Chapter02/kubia/
        ls -ltra
        # Docker build
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # Unit test
        docker run -d -p 80:8080 --name nodeapp $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker ps
        echo "Pause for 10 seconds to let container start"
        sleep 10
        curl localhost -vvv
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
