name: Deploy to ECR

on: 
  push:
    branches: [ master ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ASIAXDER4722VOWJ7YPL
        AWS_SECRET_ACCESS_KEY: Qa3HMPrwtOgIPqTMxsgA+WyByElPejseKimC5lGC
        AWS_SESSION_TOKEN: FwoGZXIvYXdzECMaDDPjVJ5DTGT6P3L6eCLJAWLpdMRDZlqCAHCN+Unp+LWZe1zgKq8maHiMAwLeUrahmn7eJxjNp/SwpYCyBqOI8FRAfaLgutNLH5b2fzzDLSgwCcDXG+lX9BA8hRJhk0e0rkJkoradOSiViatiTGNQXPewAQQDE3Xmp4MRF+W4grIVVXMS9Ue67NMnkHK6rp6p//ZejsBhSqlRJ9sS0njZXTCRsFEVuD/GM9Z/IKyZtYYQ/VCth10e4pjTBpSy2gLYScF1XCTRarrXwo0SLfCrx5xQZmi/Vg0xNiis1datBjItHiDJE2kXpIMIQvWGseKgZznUayX98DXxLk7s2g0Pdfz/FyHuDpzVomQEjB1H
        AWS_REGION: us-east-1

    - name: Build, test, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835-week3
        IMAGE_TAG: v0.1
      run: |
        cd Chapter02/kubia/
        ls -ltra
        # Docker build
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # Unit test
        docker run -d -p 80:8080 --name nodeapp $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker ps
        echo "Pause for 10 seconds to let container start"
        sleep 10
        curl localhost -vvv
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
